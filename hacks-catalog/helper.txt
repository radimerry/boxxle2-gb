.macro org, bank, offset
	.headersize 0
	.org (offset % 0x4000) + (bank * 0x4000)


	.if bank > 0
		.headersize 0x4000 - (bank * 0x4000)
	.else
		.headersize 0
	.endif
.endmacro




.macro orgpc
	org ((orga() % 0x4000) + 0x4000), orga() / 0x4000
.endmacro




.macro base, offset
	.headersize offset - orga()
.endmacro




; ###################################################




.macro warnpc, offset
	.if offset < org()
		.error (org() - offset) + " overflow  [" + tohex(org()) + " >> " + tohex(offset) + " -- " + tohex(orga()) + "]"
	.endif
.endmacro




.macro freepc, offset
	.if offset < org()
		.error (org() - offset) + " overflow  [" + tohex(org()) + " >> " + tohex(offset) + " -- " + tohex(orga()) + "]"
	.else
		.notice (offset - org()) + " free  [" + tohex(org()) + " < " + tohex(offset) + " -- " + tohex(orga()) + "]"
	.endif
.endmacro




.macro samepc, offset
	.if offset < org()
		.error (org() - offset) + " overflow  [" + tohex(org()) + " >> " + tohex(offset) + " -- " + tohex(orga()) + "]"
	.elseif offset > org()
		.error (offset - org()) + " free  [" + tohex(org()) + " < " + tohex(offset) + " -- " + tohex(orga()) + "]"
	.endif
.endmacro




.macro printpc
	.notice tohex(org())
.endmacro
